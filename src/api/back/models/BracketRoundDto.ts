/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import { SeedDto, SeedDtoFromJSON, SeedDtoFromJSONTyped, SeedDtoToJSON } from "./";

/**
 *
 * @export
 * @interface BracketRoundDto
 */
export interface BracketRoundDto {
  /**
   *
   * @type {string}
   * @memberof BracketRoundDto
   */
  title: string;
  /**
   *
   * @type {number}
   * @memberof BracketRoundDto
   */
  round: number;
  /**
   *
   * @type {string}
   * @memberof BracketRoundDto
   */
  rType: BracketRoundDtoRTypeEnum;
  /**
   *
   * @type {Array<SeedDto>}
   * @memberof BracketRoundDto
   */
  seeds: Array<SeedDto>;
}

export function BracketRoundDtoFromJSON(json: any): BracketRoundDto {
  return BracketRoundDtoFromJSONTyped(json, false);
}

export function BracketRoundDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BracketRoundDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    title: json["title"],
    round: json["round"],
    rType: json["rType"],
    seeds: (json["seeds"] as Array<any>).map(SeedDtoFromJSON)
  };
}

export function BracketRoundDtoToJSON(value?: BracketRoundDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    title: value.title,
    round: value.round,
    rType: value.rType,
    seeds: (value.seeds as Array<any>).map(SeedDtoToJSON)
  };
}

/**
 * @export
 * @enum {string}
 */
export enum BracketRoundDtoRTypeEnum {
  CASUAL = "CASUAL",
  FINAL = "FINAL"
}
