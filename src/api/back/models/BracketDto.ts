/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import { BracketRoundDto, BracketRoundDtoFromJSON, BracketRoundDtoFromJSONTyped, BracketRoundDtoToJSON } from "./";

/**
 *
 * @export
 * @interface BracketDto
 */
export interface BracketDto {
  /**
   *
   * @type {string}
   * @memberof BracketDto
   */
  type: BracketDtoTypeEnum;
  /**
   *
   * @type {Array<BracketRoundDto>}
   * @memberof BracketDto
   */
  winning: Array<BracketRoundDto>;
  /**
   *
   * @type {Array<BracketRoundDto>}
   * @memberof BracketDto
   */
  losing: Array<BracketRoundDto>;
}

export function BracketDtoFromJSON(json: any): BracketDto {
  return BracketDtoFromJSONTyped(json, false);
}

export function BracketDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BracketDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    type: json["type"],
    winning: (json["winning"] as Array<any>).map(BracketRoundDtoFromJSON),
    losing: (json["losing"] as Array<any>).map(BracketRoundDtoFromJSON)
  };
}

export function BracketDtoToJSON(value?: BracketDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    type: value.type,
    winning: (value.winning as Array<any>).map(BracketRoundDtoToJSON),
    losing: (value.losing as Array<any>).map(BracketRoundDtoToJSON)
  };
}

/**
 * @export
 * @enum {string}
 */
export enum BracketDtoTypeEnum {
  SINGLEELIMINATION = "SINGLE_ELIMINATION",
  DOUBLEELIMINATION = "DOUBLE_ELIMINATION"
}
