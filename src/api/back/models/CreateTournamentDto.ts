/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface CreateTournamentDto
 */
export interface CreateTournamentDto {
  /**
   *
   * @type {string}
   * @memberof CreateTournamentDto
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof CreateTournamentDto
   */
  entryType: CreateTournamentDtoEntryTypeEnum;
  /**
   *
   * @type {number}
   * @memberof CreateTournamentDto
   */
  startDate: number;
  /**
   *
   * @type {string}
   * @memberof CreateTournamentDto
   */
  imageUrl: string;
  /**
   *
   * @type {string}
   * @memberof CreateTournamentDto
   */
  strategy: CreateTournamentDtoStrategyEnum;
  /**
   *
   * @type {number}
   * @memberof CreateTournamentDto
   */
  bestOfRound: number;
  /**
   *
   * @type {number}
   * @memberof CreateTournamentDto
   */
  bestOfFinal: number;
  /**
   *
   * @type {number}
   * @memberof CreateTournamentDto
   */
  bestOfGrandFinal: number;
  /**
   *
   * @type {string}
   * @memberof CreateTournamentDto
   */
  version: CreateTournamentDtoVersionEnum;
}

export function CreateTournamentDtoFromJSON(json: any): CreateTournamentDto {
  return CreateTournamentDtoFromJSONTyped(json, false);
}

export function CreateTournamentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTournamentDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json["name"],
    entryType: json["entryType"],
    startDate: json["startDate"],
    imageUrl: json["imageUrl"],
    strategy: json["strategy"],
    bestOfRound: json["bestOfRound"],
    bestOfFinal: json["bestOfFinal"],
    bestOfGrandFinal: json["bestOfGrandFinal"],
    version: json["version"]
  };
}

export function CreateTournamentDtoToJSON(value?: CreateTournamentDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    entryType: value.entryType,
    startDate: value.startDate,
    imageUrl: value.imageUrl,
    strategy: value.strategy,
    bestOfRound: value.bestOfRound,
    bestOfFinal: value.bestOfFinal,
    bestOfGrandFinal: value.bestOfGrandFinal,
    version: value.version
  };
}

/**
 * @export
 * @enum {string}
 */
export enum CreateTournamentDtoEntryTypeEnum {
  PLAYER = "PLAYER",
  TEAM = "TEAM"
}
/**
 * @export
 * @enum {string}
 */
export enum CreateTournamentDtoStrategyEnum {
  SINGLEELIMINATION = "SINGLE_ELIMINATION",
  DOUBLEELIMINATION = "DOUBLE_ELIMINATION"
}
/**
 * @export
 * @enum {string}
 */
export enum CreateTournamentDtoVersionEnum {
  _681 = "Dota_681",
  _684 = "Dota_684"
}
