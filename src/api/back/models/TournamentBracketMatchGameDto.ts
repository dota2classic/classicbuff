/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface TournamentBracketMatchGameDto
 */
export interface TournamentBracketMatchGameDto {
  /**
   *
   * @type {number}
   * @memberof TournamentBracketMatchGameDto
   */
  id: number;
  /**
   *
   * @type {number}
   * @memberof TournamentBracketMatchGameDto
   */
  bmId: number;
  /**
   *
   * @type {number}
   * @memberof TournamentBracketMatchGameDto
   */
  number: number;
  /**
   *
   * @type {number}
   * @memberof TournamentBracketMatchGameDto
   */
  externalMatchId?: number;
  /**
   *
   * @type {number}
   * @memberof TournamentBracketMatchGameDto
   */
  teamOffset: number;
  /**
   *
   * @type {number}
   * @memberof TournamentBracketMatchGameDto
   */
  scheduledDate: number;
}

export function TournamentBracketMatchGameDtoFromJSON(json: any): TournamentBracketMatchGameDto {
  return TournamentBracketMatchGameDtoFromJSONTyped(json, false);
}

export function TournamentBracketMatchGameDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): TournamentBracketMatchGameDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    bmId: json["bm_id"],
    number: json["number"],
    externalMatchId: !exists(json, "externalMatchId") ? undefined : json["externalMatchId"],
    teamOffset: json["teamOffset"],
    scheduledDate: json["scheduledDate"]
  };
}

export function TournamentBracketMatchGameDtoToJSON(value?: TournamentBracketMatchGameDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    bm_id: value.bmId,
    number: value.number,
    externalMatchId: value.externalMatchId,
    teamOffset: value.teamOffset,
    scheduledDate: value.scheduledDate
  };
}
