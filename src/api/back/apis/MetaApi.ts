/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import useSWR, { ConfigInterface } from "swr";

import { HeroSummaryDto, HeroSummaryDtoFromJSON, HeroSummaryDtoToJSON } from "../models";

/**
 *
 */
export class MetaApi extends runtime.BaseAPI {
  /**
   */
  private async metaControllerHeroesRaw(): Promise<runtime.ApiResponse<Array<HeroSummaryDto>>> {
    this.metaControllerHeroesValidation();
    const context = this.metaControllerHeroesContext();
    const response = await this.request(context);

    return new runtime.JSONApiResponse(response, jsonValue => jsonValue.map(HeroSummaryDtoFromJSON));
  }

  /**
   */
  private metaControllerHeroesValidation() {}

  /**
   */
  metaControllerHeroesContext(): runtime.RequestOpts {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    return {
      path: `/v1/meta/heroes`,
      method: "GET",
      headers: headerParameters,
      query: queryParameters
    };
  }

  /**
   */
  metaControllerHeroes = async (): Promise<Array<HeroSummaryDto>> => {
    const response = await this.metaControllerHeroesRaw();
    return await response.value();
  };

  useMetaControllerHeroes(config?: ConfigInterface<Array<HeroSummaryDto>, Error>) {
    let valid = true;

    const context = this.metaControllerHeroesContext();
    return useSWR(JSON.stringify(context), valid ? () => this.metaControllerHeroes() : undefined, config);
  }
}
