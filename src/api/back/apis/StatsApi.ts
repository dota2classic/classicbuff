/* tslint:disable */
/* eslint-disable */
/**
 * Public REST api for dota2classic
 * All stuff
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import useSWR, { ConfigInterface } from "swr";

import { CurrentOnlineDto, CurrentOnlineDtoFromJSON, CurrentOnlineDtoToJSON } from "../models";

/**
 *
 */
export class StatsApi extends runtime.BaseAPI {
  /**
   */
  private async statsControllerMeRaw(): Promise<runtime.ApiResponse<CurrentOnlineDto>> {
    this.statsControllerMeValidation();
    const context = this.statsControllerMeContext();
    const response = await this.request(context);

    return new runtime.JSONApiResponse(response, jsonValue => CurrentOnlineDtoFromJSON(jsonValue));
  }

  /**
   */
  private statsControllerMeValidation() {}

  /**
   */
  statsControllerMeContext(): runtime.RequestOpts {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = typeof token === "function" ? token("bearer", []) : token;

      if (tokenString) {
        headerParameters["Authorization"] = `Bearer ${tokenString}`;
      }
    }
    return {
      path: `/v1/stats/online`,
      method: "GET",
      headers: headerParameters,
      query: queryParameters
    };
  }

  /**
   */
  statsControllerMe = async (): Promise<CurrentOnlineDto> => {
    const response = await this.statsControllerMeRaw();
    return await response.value();
  };

  useStatsControllerMe(config?: ConfigInterface<CurrentOnlineDto, Error>) {
    let valid = true;

    const context = this.statsControllerMeContext();
    return useSWR(JSON.stringify(context), valid ? () => this.statsControllerMe() : undefined, config);
  }
}
